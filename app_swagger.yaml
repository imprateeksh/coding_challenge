openapi: 3.0.1
info:
  description: "This document expalins about the endpoints used in creating this basic app."
  version: "0.1"
  title: "Feedback API"
  contact:
    email: "sharma_prateek@outlook.com"
paths:
  /health:
    get:
      tags: ["secret"]
      security:
        - bearerAuth: []
      description: "This endpoint provides health information of API"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"status": "UP"}
  /token:
    get:
      tags: ["secret"]
      security:
        - bearerAuth: []
      description: "This endpoint provides JWT token for API authentication"
      produces:
      - "application/json"
      parameters:
      - in: "Url"
        name: "query-parameter"
        description: "Status of API will be shown as Up if running."
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"token": "token_value"}
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"status": "Not able to create token"}

  /feedback:
    post:
      tags: ["secret"]
      security:
        - bearerAuth: []
      description: "This endpoint creates and stores the randomly generated feedback to a file."
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Feedback data will be added."
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"status": "Feedback added successfully."}
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"status": "Data storage file is not present."}
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"status": "Failed to store data."}
  /results:
    get:
      tags: ["secret"]
      security:
        - bearerAuth: []
      description: "This endpoint retrieves the randomly generated feedback from json file."
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Feedback data will be fetched."
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                    type: 
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"status": "Data storage file is not present."}
        "500":
          description: "Server Error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                "0":
                  value: |
                    {"status": "Failed to store data."}
 
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT